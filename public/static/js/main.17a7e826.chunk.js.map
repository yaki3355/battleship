{"version":3,"sources":["socketConfig.js","utils.js","cell.js","bot.js","components/Battlefield.js","components/Game.js","components/Home.js","App.js","index.js"],"names":["io","getUpdatedMatrix","matrix","row","col","cell","mat","shipArr","shuffleArr","arr","i","to","length","r","Math","floor","random","temp","utils","hit","isGameOver","setOpponentMatrix","setTurn","setScore","prev","ship","you","opponent","lastWinner","newBoard","ships","Array","map","backgroundColor","newBoardUtil","nrow","ncol","forEach","len","newBoardUtilPositions","j","direction","find","dir","every","_","idx","is9Clear","Cell","dirs","verArr","horArr","str","potential","countByDir","directions","filter","this","enoughPotential","start","totalHit","ver","sumPotential","hor","mx","max","some","s","strs","d","includes","reduce","sum","c","isClear","next","matrixTrack","isInBounds","Object","values","nextNoShip","reset","removeIrrelevantDirs","isDirDone","changeToOpposite","shift","opp","getOpposite","x","indexOf","from","up","upRight","right","downRight","down","downLeft","left","upLeft","ce","bot","hitBot","socket","emit","botHit","setMyMatrix","setTimeout","getRowCol","miss","setBotData","onShip","nextCoordinates","Battlefield","isMyBoard","turn","vsBot","RowShip","Row","Col","style","borderWidth","width","height","onClick","useEffect","on","useStyles","makeStyles","theme","root","flexGrow","paddingTop","spacing","battlefield","arrow","marginTop","position","Game","setGameId","exitBtn","setExitBtn","setShowGameId","history","useHistory","location","isOpponentReady","gameId","classes","lineThrough","useState","ready","setReady","btnDisabled","setBtnDisabled","open","title","dialog","setDialog","score","myMatrix","opponentMatrix","joinAlert","setJoinAlert","push","amIReady","removeAllListeners","dialogHandleClose","Grid","container","className","item","xs","justify","Typography","textDecoration","Button","variant","disabled","Tooltip","IconButton","color","Alert","severity","Dialog","onClose","DialogTitle","DialogActions","autoFocus","paper","display","flexDirection","alignItems","form","newGameBtn","margin","newGame","pathname","join","setAlert","err","Home","alert","Container","component","maxWidth","CssBaseline","TextField","fullWidth","label","value","onChange","e","target","fontSize","App","showGameId","disconnect","AppBar","Toolbar","startIcon","marginLeft","align","gutterBottom","visibility","Box","exact","path","ReactDOM","render","document","getElementById"],"mappings":"0bAEeA,E,MAAAA,KCFTC,EAAmB,SAACC,EAAQC,EAAKC,EAAKC,GAC1C,IAAMC,EAAG,YAAOJ,GAGhB,OAFAI,EAAIH,GAAJ,YAAeG,EAAIH,IACnBG,EAAIH,GAAKC,GAAOC,EACTC,GAyBHC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAavBC,EAAa,SAACC,GAGlB,IAFA,IAESC,EAAI,EAAGC,EAFJF,EAAIG,OAEW,EAAGF,EAAIC,IAAMD,EAAG,CACzC,IAAMG,EAAIC,KAAKC,MAAMD,KAAKE,UAAYP,EAAIG,OAASF,EAAI,IAAMA,EAAI,EAC3DO,EAAOR,EAAIC,GACjBD,EAAIC,GAAKD,EAAII,GACbJ,EAAII,GAAKI,EAGX,OAAOR,GAaMS,EAVD,CACZjB,mBACAkB,IAlDU,SACVhB,EACAC,EACAC,EACAe,EACAC,EACAC,EACAC,GAEA,GAAKlB,EAAL,CAEA,GADAgB,GAAkB,SAACG,GAAD,OAAUvB,EAAiBuB,EAAMrB,EAAKC,EAAKC,OACxDA,EAAKoB,KAAM,OAAOH,GAAQ,GAC3BF,GACFG,GAAS,SAACC,GAAD,MAAW,CAClBE,IAAKF,EAAKE,IAAM,EAChBC,SAAUH,EAAKG,SACfC,WAAY,YAmChBC,SA3Be,SAACC,GAChB,IAAM5B,EAAS,YAAI6B,MALR,KAKqBC,KAAI,SAAC7B,GAAD,OAClC,YAAI4B,MALK,KAKQC,KAAI,SAAC5B,GAAD,MAAU,CAC7B6B,gBAAiB,UACjBR,MAAM,EACNN,KAAK,SAGT,OAAOW,EAAQI,EAAahC,GAAUA,GAoBtCK,UACA4B,KAjCW,GAkCXC,KAjCW,GAkCX5B,cAKI0B,EAAe,SAAChC,GAKpB,OAJAK,EAAQ8B,SAAQ,SAACC,GACfC,EAAsBrC,EAAQoC,MAGzBpC,GAGHqC,EAAwB,SAACrC,EAAQoC,GACrC,IAD8C,IAAD,aAE3C,IAAM5B,EAAII,KAAKC,MAlDN,GAkDYD,KAAKE,UACpBwB,EAAI1B,KAAKC,MAlDN,GAkDYD,KAAKE,UACpByB,EAAYjC,EAAW,CAC3B,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,KACJkC,MAAK,SAACC,GAAD,OACN,YAAIZ,MAAMO,IAAMM,OAAM,SAACC,EAAGC,GAAJ,OACpBC,EAAS7C,EAAQQ,EAAIiC,EAAI,GAAKG,EAAKN,EAAIG,EAAI,GAAKG,SAGpD,OAAKL,GACL,YAAIV,MAAMO,IAAMD,SACd,SAACQ,EAAGC,GAAJ,OACG5C,EAAOQ,EAAI+B,EAAU,GAAKK,GAAKN,EAAIC,EAAU,GAAKK,GAAKrB,MAAO,KAEnE,SALgB,cAbL,CAAC,IAAD,qCAkBX,QAIEsB,EAAW,SAAC7C,EAAQC,EAAKC,GAC7B,OACED,GAAO,GACPA,EAAMD,EAAOU,QACbR,GAAO,GACPA,EAAMF,EAAOC,GAAKS,SACjBV,EAAOC,GAAKC,GAAKqB,MAClB,CACE,EAAE,EAAG,GACL,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,GAAI,GACL,EAAE,GAAI,IACNmB,OAAM,SAACD,GACP,IAAMjC,EAAIP,EAAMwC,EAAI,GACdH,EAAIpC,EAAMuC,EAAI,GACpB,OACEjC,EAAI,GACJ8B,EAAI,GACJ9B,GAAKR,EAAOU,QACZ4B,GAAKtC,EAAOQ,GAAGE,SACdV,EAAOQ,GAAG8B,GAAGf,S,kBCxHhBuB,E,oFAeJ,SAAK7C,EAAKC,GAAM,IAAD,OACP6C,EAAO/B,EACVV,WADU,sBACKwC,EAAKE,QADV,YACqBF,EAAKG,UACpCnB,KAAI,SAACoB,GAAD,MAAU,CACbA,MACAC,UAAW,EAAKC,WAAWnD,EAAKC,EAAK4C,EAAKO,WAAWH,IACrDjC,IAAK,MAENqC,QAAO,SAACb,GAAD,OAASA,EAAIU,UAAY,KAEnC,QAAKI,KAAKC,gBAAgBT,KAE1BQ,KAAKE,MAAQ,CAACxD,EAAKC,GACnBqD,KAAKR,KAAOA,EACZQ,KAAKG,SAAW,GAET,K,6BAGT,SAAgBX,GACd,IAAMY,EAAMJ,KAAKK,aAAab,EAAMD,EAAKE,QACnCa,EAAMN,KAAKK,aAAab,EAAMD,EAAKG,QACnCa,EAAKlD,KAAKmD,IAAIJ,EAAKE,GAEzB,OAAOf,EAAKzC,QAAQ2D,MAAK,SAACC,GAAD,OAAOA,GAAKH,GAAMG,O,0BAG7C,SAAalB,EAAMmB,GACjB,OAAOnB,EACJO,QAAO,SAACa,GAAD,OAAOD,EAAKE,SAASD,EAAEjB,QAC9BmB,QAAO,SAACC,EAAKH,GAAN,OAAYG,EAAMH,EAAEhB,YAAW,K,wBAG3C,SAAWlD,EAAKC,EAAKuC,GAGnB,IAFA,IAAI8B,GAAK,EAEFhB,KAAKiB,QAAQvE,EAAKC,IAAM,GAC3BqE,EAD2B,MAEhBzB,EAAK2B,KAAK,CAACxE,EAAKC,GAAMuC,GAFN,mBAE5BxC,EAF4B,KAEvBC,EAFuB,KAK/B,OAAOqE,I,qBAGT,SAAQtE,EAAKC,GACX,IAAME,EAAM0C,EAAK4B,YAEjB,OACE5B,EAAK6B,WAAW1E,EAAKC,KACpBE,EAAIH,GAAKC,GAAKe,KACf2D,OAAOC,OAAO/B,EAAKO,YAAYX,OAAM,SAACD,GAAS,IAAD,EAC7BK,EAAK2B,KAAK,CAACxE,EAAKC,GAAMuC,GADO,mBACrCjC,EADqC,KAClC8B,EADkC,KAE5C,OAAQQ,EAAK6B,WAAWnE,EAAG8B,KAAOlC,EAAII,GAAG8B,GAAGf,U,oBAKlD,WACE,OAAOgC,KAAKG,SAAW,GAAKH,KAAKC,gBAAgBD,KAAKR,Q,6BAGxD,WACE,OAAOQ,KAAKuB,e,wBAGd,WACE,IAAMX,EAAIZ,KAAKR,KAAK,GACd3C,EAAM0C,EAAK4B,YAFN,cAGEnB,KAAKE,MAHP,GAGNjD,EAHM,KAGH8B,EAHG,KAKX,EAAG,CAAC,IAAD,EACQQ,EAAK2B,KAAK,CAACjE,EAAG8B,GAAIQ,EAAKO,WAAWc,EAAEjB,MAD5C,mBACA1C,EADA,KACG8B,EADH,WAEMlC,EAAII,GAAG8B,GAAGf,MAEnB,MAAO,CAACf,EAAG8B,K,iBAGb,SAAIrC,EAAKC,GAAM,IAAD,OAKZ,GAJA4C,EAAK4B,YAAYzE,GAAKC,GAAKe,KAAM,EACjC6B,EAAK4B,YAAYzE,GAAKC,GAAKqB,MAAO,IAChCgC,KAAKG,UAEFZ,EAAKzC,QAAQ2D,MAAK,SAACC,GAAD,OAAOA,GAAKA,EAAI,EAAKP,YAAW,OAAOH,KAAKwB,QAC7C,IAAlBxB,KAAKG,UAAgBH,KAAKyB,uBAC1BzB,KAAK0B,aAAa1B,KAAK2B,qB,kBAG7B,SAAKjF,EAAKC,GAGR,GAFA4C,EAAK4B,YAAYzE,GAAKC,GAAKe,KAAM,EAEX,IAAlBsC,KAAKG,SACT,OAAsB,IAAlBH,KAAKG,SAAuBH,KAAKR,KAAKoC,aAC1C5B,KAAK2B,qB,8BAGP,WACE,IAAMf,EAAIZ,KAAKR,KAAK,GACdqC,EAAM7B,KAAK8B,YAAYlB,GAE7B,IAAKiB,EAAK,OAAO7B,KAAKwB,QAEtBK,EAAIjC,WAAagB,EAAElD,IACnBmE,EAAInE,KAAOkD,EAAElD,IACbsC,KAAKR,KAAO,CAACqC,K,uBAGf,WACE,GAAsB,IAAlB7B,KAAKG,SAAT,CAEA,IAAMS,EAAIZ,KAAKR,KAAK,GAEpB,QAASoB,EAAElD,MAAQkD,EAAEhB,a,kCAGvB,WACE,IAAMgB,EAAIZ,KAAKR,KAAK,GACdqC,EAAM7B,KAAK8B,YAAYlB,GAE7BZ,KAAKR,KAAO,CAACoB,EAAGiB,GAAK9B,QAAO,SAACgC,GAAD,OAAOA,O,yBAGrC,SAAY7C,GACV,IAAMyB,EAAOpB,EAAKE,OAAOoB,SAAS3B,EAAIS,KAAOJ,EAAKE,OAASF,EAAKG,OAC1DL,EAA8B,EAAxBsB,EAAKqB,QAAQ9C,EAAIS,KAE7B,OAAOK,KAAKR,KAAKP,MAAK,SAAC2B,GAAD,OAAOA,EAAEjB,MAAQgB,EAAKtB,Q,mBAG9C,WACE,IAAMrC,EAAMuC,EAAKzC,eAEVE,EAAIA,EAAIgF,QAAQhC,KAAKG,WAC5BH,KAAKG,SAAW,K,yBAGlB,SAAkB/C,EAAG4D,GAAI,IACftC,EAAejB,EAAfiB,KAAMC,EAASlB,EAATkB,KAEd,OAAOvB,GAAK,GAAKA,EAAIsB,GAAQsC,GAAK,GAAKA,EAAIrC,I,kBAG7C,SAAYsD,EAAM/C,GAChB,MAAO,CAAC+C,EAAK,GAAK/C,EAAI,GAAI+C,EAAK,GAAK/C,EAAI,Q,KA7JtCK,EACGO,WAAa,CAClBoC,GAAI,EAAE,EAAG,GACTC,QAAS,EAAE,EAAG,GACdC,MAAO,CAAC,EAAG,GACXC,UAAW,CAAC,EAAG,GACfC,KAAM,CAAC,EAAG,GACVC,SAAU,CAAC,GAAI,GACfC,KAAM,CAAC,GAAI,GACXC,OAAQ,EAAE,GAAI,IATZlD,EAYGE,OAAS,CAAC,KAAM,QAZnBF,EAaGG,OAAS,CAAC,OAAQ,SAoJZH,QCpJTmD,EAAK,IAAInD,EA+BAoD,GANH,CACVC,OArCa,SAAClG,EAAKC,EAAKkB,EAASD,EAAmBE,GACpD+E,EAAOC,KAAK,UAAWpG,EAAKC,GAAK,SAACC,EAAMe,GACtCF,EAAMC,IAAIhB,EAAKC,EAAKC,EAAMe,EAAYC,EAAmBC,EAASC,OAoCpEiF,OAzBa,SAATA,EAAUlF,EAASmF,EAAalF,GACpCmF,YAAW,WAAO,IAAD,EACIC,KADJ,mBACRxG,EADQ,KACHC,EADG,KAEfkG,EAAOC,KAAK,UAAWpG,EAAKC,GAAK,SAACC,EAAMe,GACtC,OAAKf,GACLoG,GAAY,SAACjF,GAAD,OAAUN,EAAMjB,iBAAiBuB,EAAMrB,EAAKC,EAAKC,MACxDA,EAAKoB,MAIV0E,EAAGhF,IAAIhB,EAAKC,GACRgB,EACKG,GAAS,SAACC,GAAD,MAAW,CACzBE,IAAKF,EAAKE,IACVC,SAAUH,EAAKG,SAAW,EAC1BC,WAAY,eAGhB4E,EAAOlF,EAASmF,EAAalF,KAX3B4E,EAAGS,KAAKzG,EAAKC,GACNkB,GAAQ,KAJCkF,EAAOlF,EAASmF,EAAalF,QAgBhD,MAMHsF,WAjCiB,SAAC,GAA8B,IAA5BjC,EAA2B,EAA3BA,YAAarE,EAAc,EAAdA,QACjCyC,EAAK4B,YAAcA,EACnB5B,EAAKzC,QAAUA,IAoCXoG,GAAY,WAChB,GAAIR,EAAGW,SAAU,OAAOX,EAAGY,kBAO3B,IARsB,IAGd5E,EAAejB,EAAfiB,KAAMC,EAASlB,EAATkB,KAEVvB,EAAIC,KAAKC,MAAMD,KAAKE,SAAWmB,GAC/BsC,EAAI3D,KAAKC,MAAMD,KAAKE,SAAWoB,GAE5BvB,EAAIsB,EAAMtB,GAAKA,EAAI,GAAKsB,EAAM,CACnC,KAAOsC,EAAIrC,IAAQqC,EACjB,GAAI0B,EAAGzD,KAAK7B,EAAG4D,GAAI,MAAO,CAAC5D,EAAG4D,GAEhCA,EAAI,I,QCrDO,SAASuC,GAAT,GASX,IARFC,EAQC,EARDA,UACAC,EAOC,EAPDA,KACA5F,EAMC,EANDA,QACApB,EAKC,EALDA,OACAuG,EAIC,EAJDA,YACApF,EAGC,EAHDA,kBACAE,EAEC,EAFDA,SACA4F,EACC,EADDA,MAoBA,SAASC,EAAT,GAA2B,IAARjH,EAAO,EAAPA,IACjB,OACE,eAACkH,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,UACG,YAAIvF,MAAMb,EAAMkB,OAAOJ,KAAI,SAACa,EAAGzC,GAAS,IAAD,EACCF,EAAOC,GAAKC,GAA3C6B,EAD8B,EAC9BA,gBAAiBR,EADa,EACbA,KAAMN,EADO,EACPA,IAC/B,OACE,eAAC,IAAD,CAEEoG,MAAO,CACLtF,gBAAiBA,EACjBuF,YAAa,SACbC,MAAO,OACPC,OAAQ,QAEVC,QAAS,WACP,IAAIV,IAAsB,IAATC,EACjB,OAAIC,EACKf,GAAIC,OACTlG,EACAC,EACAkB,EACAD,EACAE,QAEJ+E,EAAOC,KAAK,MAAOpG,EAAKC,GAAK,SAACC,EAAMe,GAClCF,EAAMC,IACJhB,EACAC,EACAC,EACAe,EACAC,EACAC,EACAC,OA1BR,SA+BGJ,EAAM,IAAMM,EAAO,IAAM,+CA9BrBrB,UAuCnB,OAjEAwH,qBAAU,WACRtB,EAAOuB,GAAG,OAAO,SAAC1H,EAAKC,EAAKC,EAAMe,GAChC,GAAK6F,GAAc5G,EAAnB,CAEA,GADAoG,GAAY,SAACjF,GAAD,OAAUN,EAAMjB,iBAAiBuB,EAAMrB,EAAKC,EAAKC,OACxDA,EAAKoB,KAAM,OAAOH,GAAQ,GAC3BF,GACFG,GAAS,SAACC,GAAD,MAAW,CAClBE,IAAKF,EAAKE,IACVC,SAAUH,EAAKG,SAAW,EAC1BC,WAAY,qBAGjB,IAEHgG,qBAAU,WACJT,IAAkB,IAATD,GAAgBd,GAAII,OAAOlF,EAASmF,EAAalF,KAC7D,CAAC2F,IAkDF,eAAC,IAAD,UACG,YAAInF,MAAMb,EAAMiB,OAAOH,KAAI,SAACa,EAAGnC,GAC9B,OAAO,eAAC0G,EAAD,CAAiBjH,IAAKO,GAARA,QC9D7B,IA2JMoH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,WAAYH,EAAMI,QAAQ,IAE5BC,YAAa,CACXX,OAAQ,IACRD,MAAO,KAETa,MAAO,CACLC,UAAW,OACXC,SAAU,gBAICC,GA1KF,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACxCC,EAAUC,cADkD,EAEvBD,EAAQE,SAA3CC,EAF0D,EAE1DA,gBAAiBC,EAFyC,EAEzCA,OAAQ/B,EAFiC,EAEjCA,MAC3BgC,EAAUrB,KACVsB,EAAc,eAJ8C,EAKxCC,mBAAS,CACjC3H,IAAK0H,EACLzH,SAAUsH,GAAmB9B,EAAQ,GAAKiC,IAPsB,mBAK3DE,EAL2D,KAKpDC,EALoD,OAS5BF,qBAT4B,mBAS3DG,EAT2D,KAS9CC,EAT8C,OAU1CJ,qBAV0C,mBAU3DnC,EAV2D,KAUrD5F,EAVqD,OAWtC+H,mBAAS,CAAEK,MAAM,EAAOC,MAAO,KAXO,mBAW3DC,EAX2D,KAWnDC,EAXmD,OAYxCR,mBAAS,CAAE3H,IAAK,EAAGC,SAAU,IAZW,mBAY3DmI,EAZ2D,KAYpDvI,EAZoD,OAalC8H,mBAASnI,EAAMW,UAAS,IAbU,mBAa3DkI,EAb2D,KAajDtD,GAbiD,QActB4C,mBAASnI,EAAMW,YAdO,qBAc3DmI,GAd2D,MAc3C3I,GAd2C,SAehCgI,qBAfgC,qBAe3DY,GAf2D,MAehDC,GAfgD,MAiBlEtC,qBAAU,WAwBR,OAvBKsB,GAAQJ,EAAQqB,KAAK,KAClBzB,EAARvB,EAAkB,IAAiB+B,GACnC5C,EAAOuB,GAAG,SAAS,SAACuC,EAAUlD,GAC5BqC,GAAS,SAAC/H,GAAD,mBAAC,eAAeA,GAAhB,IAAsBG,SAAU,QACrCyI,GACF9I,EAAQ4F,MAGZZ,EAAOuB,GAAG,SAAS,WACjBvB,EAAOC,KAAK,aACZgD,EAAS,CAAE7H,IAAK0H,EAAazH,SAAUyH,IACvCK,IACAnI,IACAC,EAAS,CAAEG,IAAK,EAAGC,SAAU,IAC7BkI,EAAU,CAAEH,MAAM,EAAMC,MAAM,GAAD,OAAKxC,EAAQ,MAAQ,WAArB,cAE/Bb,EAAOC,KAAK,cACZD,EAAOuB,GAAG,cAAc,WACtBqC,IAAa,GACbxD,YAAW,WACTwD,OACC,QAEE,WACLxB,IACAE,IACAC,IACAvC,EAAO+D,qBACP/D,EAAOC,KAAK,YAEb,IAEHqB,qBAAU,WACHe,GAASG,EAAQqB,KAAK,OAC1B,CAACxB,IAEJf,qBAAU,WACRxB,GAAIS,WAAW,CACbjC,YAAa1D,EAAMW,WACnBtB,QAAQ,YAAKW,EAAMX,WAEhBuJ,EAAMlI,aACX0E,EAAOC,KAAK,aACZgD,EAAS,CAAE7H,IAAK0H,EAAazH,SAAUwF,EAAQ,GAAKiC,IACpDS,EAAU,CAAEH,MAAM,EAAMC,MAAM,GAAD,OAAKG,EAAMlI,WAAX,aAC5B,CAACkI,IAEJ,IAeMQ,GAAoB,WACxB7D,GAAYvF,EAAMW,UAAS,IAC3BR,GAAkBH,EAAMW,YACxB4H,IACAnI,IACAuI,EAAU,CAAEH,MAAM,EAAOC,MAAO,MAGlC,OACE,gBAACY,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWtB,EAAQlB,KAAMG,QAAS,EAAlD,UACE,eAACmC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,gBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASxC,QAAS,GAA1C,UACE,gBAACmC,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,eAACG,EAAA,EAAD,CAAYtD,MAAO,CAAEuD,eAAgBxB,EAAM5H,KAA3C,mBACA,gBAACmJ,EAAA,EAAD,mBAAkBf,EAAMpI,IAAxB,OACA,eAACsF,GAAD,CACEyD,UAAWtB,EAAQd,YACnBpB,WAAW,EACX/G,OAAQ6J,EACRtD,YAAaA,GACbnF,QAASA,EACTC,SAAUA,IAEZ,eAACwJ,EAAA,EAAD,CACEC,QAAQ,WACRrD,QAxCM,WAChBrB,EAAOC,KACL,QACAwD,EACA5C,GAASjG,EAAMW,UAAS,IACxB,SAACoH,EAAiB/B,GAChBqC,GAAS,SAAC/H,GAAD,mBAAC,eAAeA,GAAhB,IAAsBE,IAAK,QACpC+H,GAAe,IACXR,GAAmB9B,IACrB7F,EAAQ4F,OAgCJ+D,SAAUzB,EAHZ,mBAOA,eAAC0B,EAAA,EAAD,CAASvB,MAAM,YAAf,SACE,eAACwB,EAAA,EAAD,CACEC,MAAM,UACNH,SAAUzB,EACV7B,QAAS,kBAAMlB,GAAYvF,EAAMW,UAAS,KAH5C,SAKE,eAAC,IAAD,YAII,IAATqF,GAAiB,eAAC,IAAD,CAAeuD,UAAWtB,EAAQb,SAC1C,IAATpB,GAAkB,eAAC,IAAD,CAAkBuD,UAAWtB,EAAQb,QACxD,gBAACiC,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,eAACG,EAAA,EAAD,CAAYtD,MAAO,CAAEuD,eAAgBxB,EAAM3H,UAA3C,mBAGA,gBAACkJ,EAAA,EAAD,WACG1D,EAAQ,MAAQ,WADnB,KACiC2C,EAAMnI,SADvC,OAGA,eAACqF,GAAD,CACEyD,UAAWtB,EAAQd,YACnBnB,KAAMA,EACN5F,QAASA,EACTpB,OAAQ8J,GACR3I,kBAAmBA,GACnBE,SAAUA,EACV4F,MAAOA,EACPV,YAAaA,KAEdwD,IAAa,eAACoB,EAAA,EAAD,CAAOC,SAAS,UAAhB,qCAIpB,gBAACC,EAAA,EAAD,CAAQ7B,KAAME,EAAOF,KAAM8B,QAASlB,GAApC,UACE,eAACmB,EAAA,EAAD,UAAc7B,EAAOD,QACrB,eAAC+B,EAAA,EAAD,UACE,eAACX,EAAA,EAAD,CAAQpD,QAAS2C,GAAmBc,MAAM,UAAUO,WAAS,EAA7D,4B,UCzFJ7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC4D,MAAO,CACLrD,UAAWP,EAAMI,QAAQ,GACzByD,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,KAAM,CACJvE,MAAO,OACPc,UAAWP,EAAMI,QAAQ,IAE3B6D,WAAY,CACVC,OAAQlE,EAAMI,QAAQ,EAAG,EAAG,QAI1B+D,GAAU,SAACrD,EAASF,EAAYzB,EAAO0B,GAC3CvC,EAAOC,KAAK,YAAY,SAAC2C,GACvBN,GAAW,GACXzB,GAAS0B,GAAc,GACvBC,EAAQqB,KAAK,CAAEiC,SAAU,QAASlD,SAAQ/B,cAIxCkF,GAAO,SAACnD,EAAQJ,EAASwD,EAAU1D,EAAYC,GACnDvC,EAAOC,KAAK,OAAQ2C,GAAQ,SAACqD,EAAKtD,GAChC,GAAIsD,EAAK,OAAOD,EAASC,GACzB3D,GAAW,GACXC,GAAc,GACdC,EAAQqB,KAAK,CAAEiC,SAAU,QAASlD,SAAQD,kBAAiB9B,OAAO,QAIvDqF,GAnGF,SAAC,GAAmC,IAAjC5D,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EAClBQ,mBAAS,IADS,mBACvCH,EADuC,KAC/BR,EAD+B,OAEpBW,qBAFoB,mBAEvCoD,EAFuC,KAEhCH,EAFgC,KAGxCxD,EAAUC,cACVI,EAAUrB,KAEhB,OACE,gBAAC4E,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,eAACC,EAAA,EAAD,IACA,sBAAKpC,UAAWtB,EAAQyC,MAAxB,SACE,wBAAMnB,UAAWtB,EAAQ6C,KAAzB,UACE,gBAACzB,EAAA,EAAD,CAAMC,WAAS,EAACpC,QAAS,EAAGb,MAAO,CAAEgB,UAAW,IAAhD,UACE,eAACgC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,eAACmC,GAAA,EAAD,CACE9B,QAAQ,WACR+B,WAAS,EACTC,MAAM,UACNC,MAAO/D,EACPgE,SAAU,SAACC,GAAD,OAAOzE,EAAUyE,EAAEC,OAAOH,YAGxC,eAAC1C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,eAACI,EAAA,EAAD,CACEC,QAAQ,WACR+B,WAAS,EACTC,MAAM,OACNzF,MAAO,CAAEG,OAAQ,IACjBC,QAAS,kBACP0E,GAAKnD,EAAQJ,EAASwD,EAAU1D,EAAYC,IANhD,uBAaJ,eAACkC,EAAA,EAAD,CACEgC,WAAS,EACT/B,QAAQ,YACRI,MAAM,UACNX,UAAWtB,EAAQ8C,WACnBtE,QAAS,kBAAMwE,GAAQrD,EAASF,GAAY,EAAOC,IALrD,sBASA,eAACkC,EAAA,EAAD,CACEpD,QAAS,kBAAMwE,GAAQrD,EAASF,GAAY,IAC5CrB,MAAO,CACLgB,UAAW,MACXtG,gBAAiB,QACjBwF,MAAO,WALX,SAQE,oBACEgD,UAAU,eACVlD,MAAO,CAAE8F,SAAU,OAAQjC,MAAO,kBAK1C,sBAAK7D,MAAO,CAAEgB,UAAW,QAAzB,SACGkE,GAAS,eAACpB,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBmB,UCsB5Ba,OA9Ef,WAAgB,IAAD,EACejE,qBADf,mBACNH,EADM,KACER,EADF,OAEuBW,qBAFvB,mBAENkE,EAFM,KAEM1E,EAFN,OAGiBQ,qBAHjB,mBAGNV,EAHM,KAGGC,EAHH,KASb,OAJAhB,qBAAU,WACR,OAAO,kBAAMtB,EAAOkH,gBACnB,IAGD,uCACE,eAACX,EAAA,EAAD,IACA,eAACY,EAAA,EAAD,CAAQjF,SAAS,SAAjB,SACE,gBAACkF,EAAA,EAAD,WACE,eAAC,IAAD,IACA,eAAC7C,EAAA,EAAD,CAAYG,QAAQ,KAApB,wBACCrC,GACC,eAACoC,EAAA,EAAD,CACEC,QAAQ,YACRI,MAAM,UACNuC,UAAW,eAAC,IAAD,IACXpG,MAAO,CAAEqG,WAAY,QACrBjG,QAAS,kBAAMiB,KALjB,uBAYN,gCACE,+BACE,gBAAC8D,EAAA,EAAD,CAAWE,SAAS,KAApB,UACE,eAAC/B,EAAA,EAAD,CACEG,QAAQ,KACR6C,MAAM,SACNzC,MAAM,cACN0C,cAAY,EAJd,wBAQC5E,GACC,gBAAC2B,EAAA,EAAD,CACEG,QAAQ,KACR6C,MAAM,SACNzC,MAAM,cACN0C,cAAY,EACZvG,MAAO,CAAEwG,WAAYR,EAAa,UAAY,UALhD,sBAOYrE,KAGd,eAAC8E,EAAA,EAAD,UACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,eAAC,GAAD,CACEtF,WAAYA,EACZC,cAAeA,MAGnB,eAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,QAAlB,SACE,eAAC,GAAD,CACExF,UAAWA,EACXC,QAASA,EACTC,WAAYA,EACZC,cAAeA,wBChFrCsF,IAASC,OAAO,eAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.17a7e826.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\nexport default io();\n","const getUpdatedMatrix = (matrix, row, col, cell) => {\n  const mat = [...matrix];\n  mat[row] = [...mat[row]];\n  mat[row][col] = cell;\n  return mat;\n};\n\nconst hit = (\n  row,\n  col,\n  cell,\n  isGameOver,\n  setOpponentMatrix,\n  setTurn,\n  setScore\n) => {\n  if (!cell) return;\n  setOpponentMatrix((prev) => getUpdatedMatrix(prev, row, col, cell));\n  if (!cell.ship) return setTurn(false);\n  if (isGameOver)\n    setScore((prev) => ({\n      you: prev.you + 1,\n      opponent: prev.opponent,\n      lastWinner: \"You\",\n    }));\n};\n\nconst nrow = 10;\nconst ncol = 10;\nconst shipArr = [5, 4, 3, 3, 2];\n\nconst newBoard = (ships) => {\n  const matrix = [...Array(nrow)].map((row) =>\n    [...Array(ncol)].map((col) => ({\n      backgroundColor: \"#03cffc\",\n      ship: false,\n      hit: false,\n    }))\n  );\n  return ships ? newBoardUtil(matrix) : matrix;\n};\n\nconst shuffleArr = (arr) => {\n  const len = arr.length;\n\n  for (let i = 0, to = len - 1; i < to; ++i) {\n    const r = Math.floor(Math.random() * (arr.length - i - 1)) + i + 1;\n    const temp = arr[i];\n    arr[i] = arr[r];\n    arr[r] = temp;\n  }\n\n  return arr;\n};\n\nconst utils = {\n  getUpdatedMatrix,\n  hit,\n  newBoard,\n  shipArr,\n  nrow,\n  ncol,\n  shuffleArr,\n};\n\nexport default utils;\n\nconst newBoardUtil = (matrix) => {\n  shipArr.forEach((len) => {\n    newBoardUtilPositions(matrix, len);\n  });\n\n  return matrix;\n};\n\nconst newBoardUtilPositions = (matrix, len) => {\n  while (true) {\n    const i = Math.floor(Math.random() * nrow);\n    const j = Math.floor(Math.random() * ncol);\n    const direction = shuffleArr([\n      [-1, 0],\n      [0, 1],\n      [1, 0],\n      [0, -1],\n    ]).find((dir) =>\n      [...Array(len)].every((_, idx) =>\n        is9Clear(matrix, i + dir[0] * idx, j + dir[1] * idx)\n      )\n    );\n    if (!direction) continue;\n    [...Array(len)].forEach(\n      (_, idx) =>\n        (matrix[i + direction[0] * idx][j + direction[1] * idx].ship = true)\n    );\n    break;\n  }\n};\n\nconst is9Clear = (matrix, row, col) => {\n  return (\n    row >= 0 &&\n    row < matrix.length &&\n    col >= 0 &&\n    col < matrix[row].length &&\n    !matrix[row][col].ship &&\n    [\n      [-1, 0],\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n      [1, 0],\n      [1, -1],\n      [0, -1],\n      [-1, -1],\n    ].every((dir) => {\n      const i = row + dir[0];\n      const j = col + dir[1];\n      return (\n        i < 0 ||\n        j < 0 ||\n        i >= matrix.length ||\n        j >= matrix[i].length ||\n        !matrix[i][j].ship\n      );\n    })\n  );\n};\n","import utils from \"./utils\";\n\nclass Cell {\n  static directions = {\n    up: [-1, 0],\n    upRight: [-1, 1],\n    right: [0, 1],\n    downRight: [1, 1],\n    down: [1, 0],\n    downLeft: [1, -1],\n    left: [0, -1],\n    upLeft: [-1, -1],\n  };\n\n  static verArr = [\"up\", \"down\"];\n  static horArr = [\"left\", \"right\"];\n\n  find(row, col) {\n    const dirs = utils\n      .shuffleArr([...Cell.verArr, ...Cell.horArr])\n      .map((str) => ({\n        str,\n        potential: this.countByDir(row, col, Cell.directions[str]),\n        hit: 0,\n      }))\n      .filter((dir) => dir.potential > 0);\n\n    if (!this.enoughPotential(dirs)) return false;\n\n    this.start = [row, col];\n    this.dirs = dirs;\n    this.totalHit = 0;\n\n    return true;\n  }\n\n  enoughPotential(dirs) {\n    const ver = this.sumPotential(dirs, Cell.verArr);\n    const hor = this.sumPotential(dirs, Cell.horArr);\n    const mx = Math.max(ver, hor);\n\n    return Cell.shipArr.some((s) => s && mx >= s);\n  }\n\n  sumPotential(dirs, strs) {\n    return dirs\n      .filter((d) => strs.includes(d.str))\n      .reduce((sum, d) => sum + d.potential, 1);\n  }\n\n  countByDir(row, col, dir) {\n    let c = -1;\n\n    while (this.isClear(row, col)) {\n      ++c;\n      [row, col] = Cell.next([row, col], dir);\n    }\n\n    return c;\n  }\n\n  isClear(row, col) {\n    const mat = Cell.matrixTrack;\n\n    return (\n      Cell.isInBounds(row, col) &&\n      !mat[row][col].hit &&\n      Object.values(Cell.directions).every((dir) => {\n        const [i, j] = Cell.next([row, col], dir);\n        return !Cell.isInBounds(i, j) || !mat[i][j].ship;\n      })\n    );\n  }\n\n  onShip() {\n    return this.totalHit > 0 && this.enoughPotential(this.dirs);\n  }\n\n  nextCoordinates() {\n    return this.nextNoShip();\n  }\n\n  nextNoShip() {\n    const d = this.dirs[0];\n    const mat = Cell.matrixTrack;\n    let [i, j] = this.start;\n\n    do {\n      [i, j] = Cell.next([i, j], Cell.directions[d.str]);\n    } while (mat[i][j].ship);\n\n    return [i, j];\n  }\n\n  hit(row, col) {\n    Cell.matrixTrack[row][col].hit = true;\n    Cell.matrixTrack[row][col].ship = true;\n    ++this.totalHit;\n\n    if (!Cell.shipArr.some((s) => s && s > this.totalHit)) return this.reset();\n    if (this.totalHit === 2) this.removeIrrelevantDirs();\n    if (this.isDirDone()) this.changeToOpposite();\n  }\n\n  miss(row, col) {\n    Cell.matrixTrack[row][col].hit = true;\n\n    if (this.totalHit === 0) return;\n    if (this.totalHit === 1) return this.dirs.shift();\n    this.changeToOpposite();\n  }\n\n  changeToOpposite() {\n    const d = this.dirs[0];\n    const opp = this.getOpposite(d);\n\n    if (!opp) return this.reset();\n\n    opp.potential += d.hit;\n    opp.hit += d.hit;\n    this.dirs = [opp];\n  }\n\n  isDirDone() {\n    if (this.totalHit === 1) return;\n\n    const d = this.dirs[0];\n\n    return ++d.hit === d.potential;\n  }\n\n  removeIrrelevantDirs() {\n    const d = this.dirs[0];\n    const opp = this.getOpposite(d);\n\n    this.dirs = [d, opp].filter((x) => x);\n  }\n\n  getOpposite(dir) {\n    const strs = Cell.verArr.includes(dir.str) ? Cell.verArr : Cell.horArr;\n    const idx = strs.indexOf(dir.str) ^ 1;\n\n    return this.dirs.find((d) => d.str === strs[idx]);\n  }\n\n  reset() {\n    const arr = Cell.shipArr;\n\n    delete arr[arr.indexOf(this.totalHit)];\n    this.totalHit = 0;\n  }\n\n  static isInBounds(r, c) {\n    const { nrow, ncol } = utils;\n\n    return r >= 0 && r < nrow && c >= 0 && c < ncol;\n  }\n\n  static next(from, dir) {\n    return [from[0] + dir[0], from[1] + dir[1]];\n  }\n}\n\nexport default Cell;\n","import socket from \"./socketConfig\";\nimport utils from \"./utils\";\nimport Cell from \"./cell\";\n\nconst hitBot = (row, col, setTurn, setOpponentMatrix, setScore) => {\n  socket.emit(\"hit bot\", row, col, (cell, isGameOver) => {\n    utils.hit(row, col, cell, isGameOver, setOpponentMatrix, setTurn, setScore);\n  });\n};\n\nconst setBotData = ({ matrixTrack, shipArr }) => {\n  Cell.matrixTrack = matrixTrack;\n  Cell.shipArr = shipArr;\n};\n\nconst ce = new Cell();\n\nconst botHit = (setTurn, setMyMatrix, setScore) => {\n  setTimeout(() => {\n    const [row, col] = getRowCol();\n    socket.emit(\"bot hit\", row, col, (cell, isGameOver) => {\n      if (!cell) return botHit(setTurn, setMyMatrix, setScore);\n      setMyMatrix((prev) => utils.getUpdatedMatrix(prev, row, col, cell));\n      if (!cell.ship) {\n        ce.miss(row, col);\n        return setTurn(true);\n      }\n      ce.hit(row, col);\n      if (isGameOver) {\n        return setScore((prev) => ({\n          you: prev.you,\n          opponent: prev.opponent + 1,\n          lastWinner: \"Bot\",\n        }));\n      }\n      botHit(setTurn, setMyMatrix, setScore);\n    });\n  }, 100);\n};\n\nconst bot = {\n  hitBot,\n  botHit,\n  setBotData,\n};\n\nexport default bot;\n\nconst getRowCol = () => {\n  if (ce.onShip()) return ce.nextCoordinates();\n\n  const { nrow, ncol } = utils;\n\n  let r = Math.floor(Math.random() * nrow);\n  let c = Math.floor(Math.random() * ncol);\n\n  for (; r < nrow; r = (r + 1) % nrow) {\n    for (; c < ncol; ++c) {\n      if (ce.find(r, c)) return [r, c];\n    }\n    c = 0;\n  }\n};\n","import { useEffect } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\n\nimport socket from \"../socketConfig\";\nimport bot from \"../bot\";\nimport utils from \"../utils\";\n\nexport default function Battlefield({\n  isMyBoard,\n  turn,\n  setTurn,\n  matrix,\n  setMyMatrix,\n  setOpponentMatrix,\n  setScore,\n  vsBot,\n}) {\n  useEffect(() => {\n    socket.on(\"hit\", (row, col, cell, isGameOver) => {\n      if (!isMyBoard || !cell) return;\n      setMyMatrix((prev) => utils.getUpdatedMatrix(prev, row, col, cell));\n      if (!cell.ship) return setTurn(true);\n      if (isGameOver)\n        setScore((prev) => ({\n          you: prev.you,\n          opponent: prev.opponent + 1,\n          lastWinner: \"Opponent\",\n        }));\n    });\n  }, []);\n\n  useEffect(() => {\n    if (vsBot && turn === false) bot.botHit(setTurn, setMyMatrix, setScore);\n  }, [turn]);\n\n  function RowShip({ row }) {\n    return (\n      <Row>\n        <Col>\n          {[...Array(utils.ncol)].map((_, col) => {\n            const { backgroundColor, ship, hit } = matrix[row][col];\n            return (\n              <Button\n                key={col}\n                style={{\n                  backgroundColor: backgroundColor,\n                  borderWidth: \"0.75px\",\n                  width: \"22px\",\n                  height: \"22px\",\n                }}\n                onClick={() => {\n                  if (isMyBoard || turn !== true) return;\n                  if (vsBot)\n                    return bot.hitBot(\n                      row,\n                      col,\n                      setTurn,\n                      setOpponentMatrix,\n                      setScore\n                    );\n                  socket.emit(\"hit\", row, col, (cell, isGameOver) => {\n                    utils.hit(\n                      row,\n                      col,\n                      cell,\n                      isGameOver,\n                      setOpponentMatrix,\n                      setTurn,\n                      setScore\n                    );\n                  });\n                }}\n              >\n                {hit ? \"X\" : ship ? \"*\" : <>&nbsp;</>}\n              </Button>\n            );\n          })}\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Container>\n      {[...Array(utils.nrow)].map((_, i) => {\n        return <RowShip key={i} row={i} />;\n      })}\n    </Container>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Grid,\n  IconButton,\n  makeStyles,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Battlefield from \"./Battlefield\";\nimport socket from \"../socketConfig\";\nimport utils from \"../utils\";\nimport bot from \"../bot\";\n\nconst Game = ({ setGameId, exitBtn, setExitBtn, setShowGameId }) => {\n  const history = useHistory();\n  const { isOpponentReady, gameId, vsBot } = history.location;\n  const classes = useStyles();\n  const lineThrough = \"line-through\";\n  const [ready, setReady] = useState({\n    you: lineThrough,\n    opponent: isOpponentReady || vsBot ? \"\" : lineThrough,\n  });\n  const [btnDisabled, setBtnDisabled] = useState();\n  const [turn, setTurn] = useState();\n  const [dialog, setDialog] = useState({ open: false, title: \"\" });\n  const [score, setScore] = useState({ you: 0, opponent: 0 });\n  const [myMatrix, setMyMatrix] = useState(utils.newBoard(true));\n  const [opponentMatrix, setOpponentMatrix] = useState(utils.newBoard());\n  const [joinAlert, setJoinAlert] = useState();\n\n  useEffect(() => {\n    if (!gameId) history.push(\"/\");\n    vsBot ? setGameId(\" \") : setGameId(gameId);\n    socket.on(\"ready\", (amIReady, turn) => {\n      setReady((prev) => ({ ...prev, opponent: \"\" }));\n      if (amIReady) {\n        setTurn(turn);\n      }\n    });\n    socket.on(\"leave\", () => {\n      socket.emit(\"not ready\");\n      setReady({ you: lineThrough, opponent: lineThrough });\n      setBtnDisabled();\n      setTurn();\n      setScore({ you: 0, opponent: 0 });\n      setDialog({ open: true, title: `${vsBot ? \"Bot\" : \"Opponent\"} left` });\n    });\n    socket.emit(\"join alert\");\n    socket.on(\"join alert\", () => {\n      setJoinAlert(true);\n      setTimeout(() => {\n        setJoinAlert();\n      }, 3000);\n    });\n    return () => {\n      setGameId();\n      setExitBtn();\n      setShowGameId();\n      socket.removeAllListeners();\n      socket.emit(\"leave\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!exitBtn) history.push(\"/\");\n  }, [exitBtn]);\n\n  useEffect(() => {\n    bot.setBotData({\n      matrixTrack: utils.newBoard(),\n      shipArr: [...utils.shipArr],\n    });\n    if (!score.lastWinner) return;\n    socket.emit(\"not ready\");\n    setReady({ you: lineThrough, opponent: vsBot ? \"\" : lineThrough });\n    setDialog({ open: true, title: `${score.lastWinner} won` });\n  }, [score]);\n\n  const emitReady = () => {\n    socket.emit(\n      \"ready\",\n      myMatrix,\n      vsBot && utils.newBoard(true),\n      (isOpponentReady, turn) => {\n        setReady((prev) => ({ ...prev, you: \"\" }));\n        setBtnDisabled(true);\n        if (isOpponentReady || vsBot) {\n          setTurn(turn);\n        }\n      }\n    );\n  };\n\n  const dialogHandleClose = () => {\n    setMyMatrix(utils.newBoard(true));\n    setOpponentMatrix(utils.newBoard());\n    setBtnDisabled();\n    setTurn();\n    setDialog({ open: false, title: \"\" });\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={10}>\n          <Grid item>\n            <Typography style={{ textDecoration: ready.you }}>Ready</Typography>\n            <Typography>You ({score.you})</Typography>\n            <Battlefield\n              className={classes.battlefield}\n              isMyBoard={true}\n              matrix={myMatrix}\n              setMyMatrix={setMyMatrix}\n              setTurn={setTurn}\n              setScore={setScore}\n            />\n            <Button\n              variant=\"outlined\"\n              onClick={emitReady}\n              disabled={btnDisabled}\n            >\n              Start\n            </Button>\n            <Tooltip title=\"New board\">\n              <IconButton\n                color=\"primary\"\n                disabled={btnDisabled}\n                onClick={() => setMyMatrix(utils.newBoard(true))}\n              >\n                <ShuffleIcon />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n          {turn === true && <ArrowBackIcon className={classes.arrow} />}\n          {turn === false && <ArrowForwardIcon className={classes.arrow} />}\n          <Grid item>\n            <Typography style={{ textDecoration: ready.opponent }}>\n              Ready\n            </Typography>\n            <Typography>\n              {vsBot ? \"Bot\" : \"Opponent\"} ({score.opponent})\n            </Typography>\n            <Battlefield\n              className={classes.battlefield}\n              turn={turn}\n              setTurn={setTurn}\n              matrix={opponentMatrix}\n              setOpponentMatrix={setOpponentMatrix}\n              setScore={setScore}\n              vsBot={vsBot}\n              setMyMatrix={setMyMatrix}\n            />\n            {joinAlert && <Alert severity=\"success\">Opponent joined</Alert>}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Dialog open={dialog.open} onClose={dialogHandleClose}>\n        <DialogTitle>{dialog.title}</DialogTitle>\n        <DialogActions>\n          <Button onClick={dialogHandleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(4),\n  },\n  battlefield: {\n    height: 140,\n    width: 100,\n  },\n  arrow: {\n    marginTop: \"65px\",\n    position: \"absolute\",\n  },\n}));\n\nexport default Game;\n","import { useHistory } from \"react-router-dom\";\nimport {\n  TextField,\n  Button,\n  Container,\n  CssBaseline,\n  makeStyles,\n  Grid,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useState } from \"react\";\n\nimport socket from \"../socketConfig\";\n\nconst Home = ({ setExitBtn, setShowGameId }) => {\n  const [gameId, setGameId] = useState(\"\");\n  const [alert, setAlert] = useState();\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form className={classes.form}>\n          <Grid container spacing={2} style={{ marginTop: 10 }}>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Game Id\"\n                value={gameId}\n                onChange={(e) => setGameId(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"outlined\"\n                fullWidth\n                label=\"Join\"\n                style={{ height: 55 }}\n                onClick={() =>\n                  join(gameId, history, setAlert, setExitBtn, setShowGameId)\n                }\n              >\n                Join\n              </Button>\n            </Grid>\n          </Grid>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.newGameBtn}\n            onClick={() => newGame(history, setExitBtn, false, setShowGameId)}\n          >\n            New game\n          </Button>\n          <Button\n            onClick={() => newGame(history, setExitBtn, true)}\n            style={{\n              marginTop: \"6px\",\n              backgroundColor: \"black\",\n              width: \"inherit\",\n            }}\n          >\n            <i\n              className=\"fas fa-robot\"\n              style={{ fontSize: \"30px\", color: \"white\" }}\n            ></i>\n          </Button>\n        </form>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        {alert && <Alert severity=\"error\">{alert}</Alert>}\n      </div>\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  newGameBtn: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst newGame = (history, setExitBtn, vsBot, setShowGameId) => {\n  socket.emit(\"new game\", (gameId) => {\n    setExitBtn(true);\n    vsBot || setShowGameId(true);\n    history.push({ pathname: \"/game\", gameId, vsBot });\n  });\n};\n\nconst join = (gameId, history, setAlert, setExitBtn, setShowGameId) => {\n  socket.emit(\"join\", gameId, (err, isOpponentReady) => {\n    if (err) return setAlert(err);\n    setExitBtn(true);\n    setShowGameId(true);\n    history.push({ pathname: \"/game\", gameId, isOpponentReady, vsBot: false });\n  });\n};\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport DirectionsBoatIcon from \"@material-ui/icons/DirectionsBoat\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useEffect, useState } from \"react\";\n\nimport Game from \"./components/Game\";\nimport Home from \"./components/Home\";\nimport socket from \"./socketConfig\";\n\nfunction App() {\n  const [gameId, setGameId] = useState();\n  const [showGameId, setShowGameId] = useState();\n  const [exitBtn, setExitBtn] = useState();\n\n  useEffect(() => {\n    return () => socket.disconnect();\n  }, []);\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <DirectionsBoatIcon />\n          <Typography variant=\"h6\">Battleship</Typography>\n          {exitBtn && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              startIcon={<ExitToAppIcon />}\n              style={{ marginLeft: \"auto\" }}\n              onClick={() => setExitBtn()}\n            >\n              Exit\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      <main>\n        <div>\n          <Container maxWidth=\"sm\">\n            <Typography\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              Battleship\n            </Typography>\n            {gameId && (\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n                style={{ visibility: showGameId ? \"visible\" : \"hidden\" }}\n              >\n                Game Id: {gameId}\n              </Typography>\n            )}\n            <Box>\n              <Router>\n                <Switch>\n                  <Route exact path=\"/\">\n                    <Home\n                      setExitBtn={setExitBtn}\n                      setShowGameId={setShowGameId}\n                    />\n                  </Route>\n                  <Route exact path=\"/game\">\n                    <Game\n                      setGameId={setGameId}\n                      exitBtn={exitBtn}\n                      setExitBtn={setExitBtn}\n                      setShowGameId={setShowGameId}\n                    />\n                  </Route>\n                </Switch>\n              </Router>\n            </Box>\n          </Container>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}